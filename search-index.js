var N=null,E="",T="t",U="u",searchIndex={};
var R=["Connection","usize","result","usererror","context","reason","option","Returns the error if the error is an io::Error","error","Reason","HTTP/2.0 error codes.","StreamId","A stream identifier, as described in [Section 5.1.1] of…","Priority","Settings","PushPromise","WindowUpdate","Continuation","Headers","streamid","stream_id","headermap","bytesmut","is_end_stream","set_end_stream","continuation","pushpromiseheadererror","into_fields","load_hpack","is_end_headers","set_end_headers","is_over_size","into_parts","encode","encoder","into_payload","h2::frame","settings","Returns true if this stream ID corresponds to a stream…","streamidoverflow","windowupdate","poll_ready","request","initial_window_size","Indicates the initial window size (in octets) for…","max_frame_size","max_header_list_size","max_concurrent_streams","handshake","set_initial_window_size","pingpong","Returns the stream ID of the response stream.","set_target_window_size","Sets the target window size for the whole connection.","Set a new `INITIAL_WINDOW_SIZE` setting (in octets) for…","ping_pong","Takes a `PingPong` instance from the connection.","initial_connection_window_size","Indicates the size (in octets) of the largest HTTP/2.0…","Sets the max size of received header frames.","Sets the maximum number of concurrent streams.","max_concurrent_reset_streams","Sets the maximum number of concurrent locally reset streams.","reset_stream_duration","duration","response","sendstream","sendpushedresponse","send_response","send_reset","Send a stream reset to the peer.","poll_reset","Polls to be notified when the client resets this stream.","trailers","to_string","try_from","try_into","borrow_mut","to_owned","clone_into","type_id","borrow","typeid","equivalent","try_poll_next","string","h2::client","try_poll","h2::server","builder","flowcontrol","default","goaway","headers","pushpromise","pseudo","priority","streamdependency","ordering","formatter","description","poll_next","Returns `Ready` when the codec can buffer a frame","Flush buffered data to the wire","RecvError","SendError","UserError","PushPromiseHeaderError","StreamDependency","SendRequest","ResponseFuture","PushPromises","PushedResponseFuture","SendResponse","SendPushedResponse","SendStream","RecvStream","FlowControl","StreamIdOverflow","ReadySendRequest","Handshake"];

searchIndex["h2"]={"doc":"An asynchronous, HTTP/2.0 server and client implementation.","i":[[3,"Error","h2","Represents HTTP/2.0 operation errors.",N,N],[3,R[9],E,R[10],N,N],[3,R[117],E,"A handle to release window capacity to a remote stream.",N,N],[3,"Ping",E,"Sent via [`PingPong`][] to send a PING frame to a peer.",N,N],[3,"PingPong",E,"A handle to send and receive PING frames with the peer.",N,N],[3,"Pong",E,"Received via [`PingPong`][] when a peer acknowledges a…",N,N],[3,R[116],E,"Receives the body stream and trailers from the remote peer.",N,N],[3,R[115],E,"Sends the body stream and trailers to the remote peer.",N,N],[3,R[11],E,R[12],N,N],[3,"Codec",E,E,N,N],[4,R[104],E,"Errors that are received",N,N],[13,R[0],E,E,0,N],[13,"Stream",E,E,0,N],[12,"id","h2::RecvError",E,0,N],[12,R[5],E,E,0,N],[13,"Io","h2",E,0,N],[4,R[105],E,"Errors caused by sending a message",N,N],[13,"User",E,"User error",1,N],[13,R[0],E,"Connection error prevents sending.",1,N],[13,"Io",E,"I/O error",1,N],[4,R[106],E,"Errors caused by users of the library",N,N],[13,"InactiveStreamId",E,"The stream ID is no longer accepting frames.",2,N],[13,"UnexpectedFrameType",E,"The stream is not currently expecting a frame of this type.",2,N],[13,"PayloadTooBig",E,"The payload size is too big",2,N],[13,"HeaderTooBig",E,"A header size is too big",2,N],[13,"Rejected",E,"The application attempted to initiate too many streams to…",2,N],[13,"ReleaseCapacityTooBig",E,"The released capacity is larger than claimed capacity.",2,N],[13,"OverflowedStreamId",E,"The stream ID space is overflowed.",2,N],[13,"MalformedHeaders",E,"Illegal headers, such as connection-specific headers.",2,N],[13,"MissingUriSchemeAndAuthority",E,"Request submitted with relative URI.",2,N],[13,"PollResetAfterSendResponse",E,"Calls `SendResponse::poll_reset` after having called…",2,N],[13,"SendPingWhilePending",E,"Calls `PingPong::send_ping` before receiving a pong.",2,N],[13,"SendSettingsWhilePending",E,"Tries to update local SETTINGS while ACK has not been…",2,N],[11,"new",E,"Returns a new `Codec` with the default max frame size",3,[[[T]],["self"]]],[11,"with_max_recv_frame_size",E,"Returns a new `Codec` with the given maximum frame size",3,[[[T],[R[1]]],["self"]]],[11,"set_max_recv_frame_size",E,"Updates the max received frame size.",3,[[["self"],[R[1]]]]],[11,"max_recv_frame_size",E,"Returns the current max received frame size setting.",3,[[["self"]],[R[1]]]],[11,"max_send_frame_size",E,"Returns the max frame size that can be sent to the peer.",3,[[["self"]],[R[1]]]],[11,"set_max_send_frame_size",E,"Set the peer's max frame size.",3,[[["self"],[R[1]]]]],[11,"set_max_recv_header_list_size",E,"Set the max header list size that can be received.",3,[[["self"],[R[1]]]]],[11,"get_ref",E,"Get a reference to the inner stream.",3,[[["self"]],[T]]],[11,"get_mut",E,"Get a mutable reference to the inner stream.",3,[[["self"]],[T]]],[11,R[41],E,R[102],3,[[["self"],[R[4]]],[["poll",[R[2]]],[R[2]]]]],[11,"buffer",E,"Buffer a frame.",3,[[["self"],["frame"]],[[R[2],[R[3]]],[R[3]]]]],[11,"flush",E,R[103],3,[[["self"],[R[4]]],[["poll",[R[2]]],[R[2]]]]],[11,"shutdown",E,"Shutdown the send half",3,[[["self"],[R[4]]],[["poll",[R[2]]],[R[2]]]]],[11,R[5],E,"If the error was caused by the remote peer, the error…",4,[[["self"]],[[R[5]],[R[6],[R[5]]]]]],[11,"is_io",E,"Returns the true if the error is an io::Error",4,[[["self"]],["bool"]]],[11,"get_io",E,R[7],4,[[["self"]],[[R[6],[R[8]]],[R[8]]]]],[11,"into_io",E,R[7],4,[[],[[R[8]],[R[6],[R[8]]]]]],[0,"frame",E,E,N,N],[3,"Data",R[36],"Data frame",N,N],[3,"GoAway",E,E,N,N],[3,"Head",E,E,N,N],[3,R[17],E,E,N,N],[3,R[18],E,"Header frame",N,N],[3,"Pseudo",E,E,N,N],[12,"method",E,E,5,N],[12,"scheme",E,E,5,N],[12,"authority",E,E,5,N],[12,"path",E,E,5,N],[12,"status",E,E,5,N],[3,R[15],E,E,N,N],[3,"Ping",E,E,N,N],[3,R[13],E,E,N,N],[3,R[108],E,E,N,N],[3,R[9],E,R[10],N,N],[3,"Reset",E,E,N,N],[3,R[14],E,E,N,N],[3,R[11],E,R[12],N,N],[3,R[118],E,E,N,N],[3,R[16],E,E,N,N],[4,"Kind",E,E,N,N],[13,"Data",E,E,6,N],[13,R[18],E,E,6,N],[13,R[13],E,E,6,N],[13,"Reset",E,E,6,N],[13,R[14],E,E,6,N],[13,R[15],E,E,6,N],[13,"Ping",E,E,6,N],[13,"GoAway",E,E,6,N],[13,R[16],E,E,6,N],[13,R[17],E,E,6,N],[13,"Unknown",E,E,6,N],[4,R[107],E,E,N,N],[13,"InvalidContentLength",E,E,7,N],[13,"NotSafeAndCacheable",E,E,7,N],[4,"Frame",E,E,N,N],[13,"Data",E,E,8,N],[13,R[18],E,E,8,N],[13,R[13],E,E,8,N],[13,R[15],E,E,8,N],[13,R[14],E,E,8,N],[13,"Ping",E,E,8,N],[13,"GoAway",E,E,8,N],[13,R[16],E,E,8,N],[13,"Reset",E,E,8,N],[4,"Error",E,"Errors that can occur during parsing an HTTP/2 frame.",N,N],[13,"BadFrameSize",E,"A length value other than 8 was set on a PING message.",9,N],[13,"TooMuchPadding",E,"The padding length was larger than the…",9,N],[13,"InvalidSettingValue",E,"An invalid setting value was provided",9,N],[13,"InvalidWindowUpdateValue",E,"An invalid window update value",9,N],[13,"InvalidPayloadLength",E,"The payload length specified by the frame header was not…",9,N],[13,"InvalidPayloadAckSettings",E,"Received a payload with an ACK settings frame",9,N],[13,"InvalidStreamId",E,"An invalid stream identifier was provided.",9,N],[13,"MalformedMessage",E,"A request or response is malformed.",9,N],[13,"InvalidDependencyId",E,"An invalid stream dependency ID was provided",9,N],[13,"Hpack",E,"Failed to perform HPACK decoding",9,N],[5,"parse_u64",E,E,N,[[],[[R[2],["u64"]],["u64"]]]],[11,"new",E,"Creates a new DATA frame.",10,[[[R[19]],[T]],["self"]]],[11,R[20],E,"Returns the stream identifer that this frame is associated…",10,[[["self"]],[R[19]]]],[11,R[23],E,"Gets the value of the `END_STREAM` flag for this frame.",10,[[["self"]],["bool"]]],[11,R[24],E,"Sets the value for the `END_STREAM` flag on this frame.",10,[[["self"],["bool"]]]],[11,"is_padded",E,"Returns whther the `PADDED` flag is set on this frame.",10,[[["self"]],["bool"]]],[11,"set_padded",E,"Sets the value for the `PADDED` flag on this frame.",10,[[["self"]]]],[11,"payload",E,"Returns a reference to this frame's payload.",10,[[["self"]],[T]]],[11,"payload_mut",E,"Returns a mutable reference to this frame's payload.",10,[[["self"]],[T]]],[11,R[35],E,"Consumes `self` and returns the frame's payload.",10,[[],[T]]],[11,"new",E,E,11,[[[R[5]],[R[19]]],["self"]]],[11,"last_stream_id",E,E,11,[[["self"]],[R[19]]]],[11,R[5],E,E,11,[[["self"]],[R[5]]]],[11,"debug_data",E,E,11,[[["self"]]]],[11,"load",E,E,11,[[],[[R[8]],[R[2],[R[92],R[8]]],[R[92]]]]],[11,R[33],E,E,11,[[["self"],["b"]]]],[11,"new",E,E,12,[[["kind"],[R[19]],["u8"]],["head"]]],[11,"parse",E,"Parse an HTTP/2.0 frame header",12,[[],["head"]]],[11,R[20],E,E,12,[[["self"]],[R[19]]]],[11,"kind",E,E,12,[[["self"]],["kind"]]],[11,"flag",E,E,12,[[["self"]],["u8"]]],[11,"encode_len",E,E,12,[[["self"]],[R[1]]]],[11,R[33],E,E,12,[[[T],["self"],[R[1]]]]],[11,"new",E,E,6,[[["u8"]],["kind"]]],[11,"new",E,"Create a new HEADERS frame",13,[[[R[21]],[R[19]],[R[95]]],["self"]]],[11,R[73],E,E,13,[[[R[21]],[R[19]]],["self"]]],[11,"load",E,"Loads the header frame but doesn't actually do HPACK…",13,[[["head"],[R[22]]],[[R[8]],[R[2],[R[8]]]]]],[11,R[28],E,E,13,[[["decoder"],[R[1]],[R[22]],["self"]],[[R[2],[R[8]]],[R[8]]]]],[11,R[20],E,E,13,[[["self"]],[R[19]]]],[11,R[29],E,E,13,[[["self"]],["bool"]]],[11,R[30],E,E,13,[[["self"]]]],[11,R[23],E,E,13,[[["self"]],["bool"]]],[11,R[24],E,E,13,[[["self"]]]],[11,R[31],E,E,13,[[["self"]],["bool"]]],[11,R[32],E,E,13,[[]]],[11,"pseudo_mut",E,E,13,[[["self"]],[R[95]]]],[11,"fields",E,E,13,[[["self"]],[R[21]]]],[11,R[27],E,E,13,[[],[R[21]]]],[11,R[33],E,E,13,[[["limit"],[R[34]]],[[R[25]],[R[6],[R[25]]]]]],[11,"new",E,E,14,[[[R[21]],[R[19]],[R[95]]],["self"]]],[11,"validate_request",E,E,14,[[[R[42]]],[[R[26]],[R[2],[R[26]]]]]],[11,"fields",E,E,14,[[["self"]],[R[21]]]],[11,R[27],E,E,14,[[],[R[21]]]],[11,"load",E,"Loads the push promise frame but doesn't actually do HPACK…",14,[[["head"],[R[22]]],[[R[8]],[R[2],[R[8]]]]]],[11,R[28],E,E,14,[[["decoder"],[R[1]],[R[22]],["self"]],[[R[2],[R[8]]],[R[8]]]]],[11,R[20],E,E,14,[[["self"]],[R[19]]]],[11,"promised_id",E,E,14,[[["self"]],[R[19]]]],[11,R[29],E,E,14,[[["self"]],["bool"]]],[11,R[30],E,E,14,[[["self"]]]],[11,R[31],E,E,14,[[["self"]],["bool"]]],[11,R[33],E,E,14,[[["limit"],[R[34]]],[[R[25]],[R[6],[R[25]]]]]],[11,R[32],E,"Consume `self`, returning the parts of the frame",14,[[]]],[11,R[33],E,E,15,[[["limit"],[R[34]]],[[R[25]],[R[6],[R[25]]]]]],[11,R[42],E,E,5,[[["method"],["uri"]],["self"]]],[11,R[65],E,E,5,[[["statuscode"]],["self"]]],[11,"set_scheme",E,E,5,[[["self"],["scheme"]]]],[11,"set_authority",E,E,5,[[["bytesstr"],["self"]]]],[18,"SHUTDOWN",E,E,16,N],[18,"USER",E,E,16,N],[11,"new",E,E,16,[[],["ping"]]],[11,"pong",E,E,16,[[],["ping"]]],[11,"is_ack",E,E,16,[[["self"]],["bool"]]],[11,"payload",E,E,16,[[["self"]]]],[11,R[35],E,E,16,[[]]],[11,"load",E,"Builds a `Ping` frame from a raw frame.",16,[[["head"]],[[R[8]],["ping"],[R[2],["ping",R[8]]]]]],[11,R[33],E,E,16,[[["self"],["b"]]]],[11,"load",E,E,17,[[["head"]],[[R[2],[R[8]]],[R[8]]]]],[11,"new",E,E,18,[[["bool"],[R[19]],["u8"]],["self"]]],[11,"load",E,E,18,[[],[[R[2],[R[8]]],[R[8]]]]],[11,"dependency_id",E,E,18,[[["self"]],[R[19]]]],[18,"NO_ERROR","h2","The associated condition is not a result of an error.",19,N],[18,"PROTOCOL_ERROR",E,"The endpoint detected an unspecific protocol error.",19,N],[18,"INTERNAL_ERROR",E,"The endpoint encountered an unexpected internal error.",19,N],[18,"FLOW_CONTROL_ERROR",E,"The endpoint detected that its peer violated the…",19,N],[18,"SETTINGS_TIMEOUT",E,"The endpoint sent a SETTINGS frame but did not receive a…",19,N],[18,"STREAM_CLOSED",E,"The endpoint received a frame after a stream was…",19,N],[18,"FRAME_SIZE_ERROR",E,"The endpoint received a frame with an invalid size.",19,N],[18,"REFUSED_STREAM",E,"The endpoint refused the stream prior to performing any…",19,N],[18,"CANCEL",E,"Used by the endpoint to indicate that the stream is no…",19,N],[18,"COMPRESSION_ERROR",E,"The endpoint is unable to maintain the header compression…",19,N],[18,"CONNECT_ERROR",E,"The connection established in response to a CONNECT…",19,N],[18,"ENHANCE_YOUR_CALM",E,"The endpoint detected that its peer is exhibiting a…",19,N],[18,"INADEQUATE_SECURITY",E,"The underlying transport has properties that do not meet…",19,N],[18,"HTTP_1_1_REQUIRED",E,"The endpoint requires that HTTP/1.1 be used instead of…",19,N],[11,R[100],E,"Get a string description of the error code.",19,[[["self"]],["str"]]],[11,"new",R[36],E,20,[[[R[5]],[R[19]]],["reset"]]],[11,R[20],E,E,20,[[["self"]],[R[19]]]],[11,R[5],E,E,20,[[["self"]],[R[5]]]],[11,"load",E,E,20,[[["head"]],[["reset"],[R[8]],[R[2],["reset",R[8]]]]]],[11,R[33],E,E,20,[[["self"],["b"]]]],[11,"ack",E,E,21,[[],[R[37]]]],[11,"is_ack",E,E,21,[[["self"]],["bool"]]],[11,R[43],E,E,21,[[["self"]],[["u32"],[R[6],["u32"]]]]],[11,R[49],E,E,21,[[["self"],["u32"],[R[6],["u32"]]]]],[11,R[47],E,E,21,[[["self"]],[["u32"],[R[6],["u32"]]]]],[11,"set_max_concurrent_streams",E,E,21,[[["self"],["u32"],[R[6],["u32"]]]]],[11,R[45],E,E,21,[[["self"]],[["u32"],[R[6],["u32"]]]]],[11,"set_max_frame_size",E,E,21,[[["self"],["u32"],[R[6],["u32"]]]]],[11,R[46],E,E,21,[[["self"]],[["u32"],[R[6],["u32"]]]]],[11,"set_max_header_list_size",E,E,21,[[["self"],["u32"],[R[6],["u32"]]]]],[11,"is_push_enabled",E,E,21,[[["self"]],["bool"]]],[11,"set_enable_push",E,E,21,[[["self"],["bool"]]]],[11,"load",E,E,21,[[["head"]],[[R[37]],[R[8]],[R[2],[R[37],R[8]]]]]],[11,R[33],E,E,21,[[[R[22]],["self"]]]],[18,"ZERO",E,"Stream ID 0.",22,N],[18,"MAX",E,"The maximum allowed stream ID.",22,N],[11,"parse",E,"Parse the stream ID",22,[[]]],[11,"is_client_initiated",E,R[38],22,[[["self"]],["bool"]]],[11,"is_server_initiated",E,R[38],22,[[["self"]],["bool"]]],[11,"zero",E,"Return a new `StreamId` for stream 0.",22,[[],[R[19]]]],[11,"is_zero",E,"Returns true if this stream ID is zero.",22,[[["self"]],["bool"]]],[11,"next_id",E,"Returns the next stream ID initiated by the same peer as…",22,[[["self"]],[[R[2],[R[19],R[39]]],[R[39]],[R[19]]]]],[11,"new",E,E,23,[[["u32"],[R[19]]],[R[40]]]],[11,R[20],E,E,23,[[["self"]],[R[19]]]],[11,"size_increment",E,E,23,[[["self"]],["u32"]]],[11,"load",E,"Builds a `WindowUpdate` frame from a raw frame.",23,[[["head"]],[[R[40]],[R[8]],[R[2],[R[40],R[8]]]]]],[11,R[33],E,E,23,[[["self"],["b"]]]],[6,"FrameSize",E,E,N,N],[17,"DEFAULT_INITIAL_WINDOW_SIZE",E,"The default value of SETTINGS_INITIAL_WINDOW_SIZE",N,N],[17,"DEFAULT_MAX_FRAME_SIZE",E,"The default value of MAX_FRAME_SIZE",N,N],[17,"DEFAULT_SETTINGS_HEADER_TABLE_SIZE",E,"The default value of SETTINGS_HEADER_TABLE_SIZE",N,N],[17,"MAX_INITIAL_WINDOW_SIZE",E,"INITIAL_WINDOW_SIZE upper bound",N,N],[17,"MAX_MAX_FRAME_SIZE",E,"MAX_FRAME_SIZE upper bound",N,N],[17,"HEADER_LEN",E,E,N,N],[11,"map",E,E,8,[[["f"]],["frame"]]],[0,"client","h2","Client implementation of the HTTP/2.0 protocol.",N,N],[3,R[109],R[86],"Initializes new HTTP/2.0 streams on a connection by…",N,N],[3,R[119],E,"Returns a `SendRequest` instance once it is ready to send…",N,N],[3,R[0],E,"Manages all state associated with an HTTP/2.0 client…",N,N],[3,R[110],E,"A future of an HTTP response.",N,N],[3,R[112],E,"A future of a pushed HTTP response.",N,N],[3,R[15],E,"A pushed response and corresponding request headers",N,N],[3,R[111],E,"A stream of pushed responses and corresponding promised…",N,N],[3,"Builder",E,"Builds client connections with custom configuration values.",N,N],[5,R[48],E,"Creates a new configured HTTP/2.0 client with default…",N,[[[T]]]],[11,R[41],E,"Returns `Ready` when the connection can initialize a new…",24,[[["self"],[R[4]]],[["poll",[R[2]]],[R[2],[R[8]]]]]],[11,"ready",E,"Consumes `self`, returning a future that returns `self`…",24,[[],["readysendrequest"]]],[11,"send_request",E,"Sends a HTTP/2.0 request to the server.",24,[[[R[42]],["self"],["bool"]],[[R[8]],[R[2],[R[8]]]]]],[11,"num_active_streams",E,"Returns the number of active streams.",24,[[["self"]],[R[1]]]],[11,"num_wired_streams",E,"Returns the number of streams that are held in memory.",24,[[["self"]],[R[1]]]],[11,"new",E,"Returns a new client builder instance initialized with…",25,[[],[R[89]]]],[11,R[43],E,R[44],25,[[["self"],["u32"]],["self"]]],[11,R[57],E,R[44],25,[[["self"],["u32"]],["self"]]],[11,R[45],E,R[58],25,[[["self"],["u32"]],["self"]]],[11,R[46],E,R[59],25,[[["self"],["u32"]],["self"]]],[11,R[47],E,R[60],25,[[["self"],["u32"]],["self"]]],[11,"initial_max_send_streams",E,"Sets the initial maximum of locally initiated (send)…",25,[[["self"],[R[1]]],["self"]]],[11,R[61],E,R[62],25,[[["self"],[R[1]]],["self"]]],[11,R[63],E,"Sets the duration to remember locally reset streams.",25,[[["self"],[R[64]]],["self"]]],[11,"enable_push",E,"Enables or disables server push promises.",25,[[["self"],["bool"]],["self"]]],[11,"initial_stream_id",E,"Sets the first stream ID to something other than 1.",25,[[["self"],["u32"]],["self"]]],[11,R[48],E,"Creates a new configured HTTP/2.0 client backed by `io`.",25,[[["self"],[T]]]],[11,R[52],E,R[53],26,[[["self"],["u32"]]]],[11,R[49],E,R[54],26,[[["self"],["u32"]],[[R[8]],[R[2],[R[8]]]]]],[11,R[55],E,R[56],26,[[["self"]],[[R[6],[R[50]]],[R[50]]]]],[11,R[20],E,R[51],27,[[["self"]],[R[19]]]],[11,"push_promises",E,"Returns a stream of PushPromises",27,[[["self"]],["pushpromises"]]],[11,"push_promise",E,"Get the next `PushPromise`.",28,[[["self"]]]],[11,R[42],E,"Returns a reference to the push promise's request headers.",29,[[["self"]],[R[42]]]],[11,"request_mut",E,"Returns a mutable reference to the push promise's request…",29,[[["self"]],[R[42]]]],[11,R[32],E,"Consumes `self`, returning the push promise's request…",29,[[]]],[11,R[20],E,R[51],30,[[["self"]],[R[19]]]],[0,"server","h2","Server implementation of the HTTP/2.0 protocol.",N,N],[3,R[120],R[88],"In progress HTTP/2.0 connection handshake future.",N,N],[3,R[0],E,"Accepts inbound HTTP/2.0 streams on a connection.",N,N],[3,"Builder",E,"Builds server connections with custom configuration values.",N,N],[3,R[113],E,"Send a response back to the client",N,N],[3,R[114],E,"Send a response to a promised request",N,N],[5,R[48],E,"Creates a new configured HTTP/2.0 server with default…",N,[[[T]],[["bytes"],[R[48],["bytes"]]]]],[11,"accept",E,"Accept the next incoming request on this connection.",31,[[["self"]]]],[11,R[52],E,R[53],31,[[["self"],["u32"]]]],[11,R[49],E,R[54],31,[[["self"],["u32"]],[[R[8]],[R[2],[R[8]]]]]],[11,"poll_closed",E,"Returns `Ready` when the underlying connection has closed.",31,[[["self"],[R[4]]],[["poll",[R[2]]],[R[2],[R[8]]]]]],[11,"abrupt_shutdown",E,"Sets the connection to a GOAWAY state.",31,[[[R[5]],["self"]]]],[11,"graceful_shutdown",E,"Starts a [graceful shutdown][1] process.",31,[[["self"]]]],[11,R[55],E,R[56],31,[[["self"]],[[R[6],[R[50]]],[R[50]]]]],[11,"new",E,"Returns a new server builder instance initialized with…",32,[[],[R[89]]]],[11,R[43],E,R[44],32,[[["self"],["u32"]],["self"]]],[11,R[57],E,R[44],32,[[["self"],["u32"]],["self"]]],[11,R[45],E,R[58],32,[[["self"],["u32"]],["self"]]],[11,R[46],E,R[59],32,[[["self"],["u32"]],["self"]]],[11,R[47],E,R[60],32,[[["self"],["u32"]],["self"]]],[11,R[61],E,R[62],32,[[["self"],[R[1]]],["self"]]],[11,R[63],E,R[62],32,[[["self"],[R[64]]],["self"]]],[11,R[48],E,"Creates a new configured HTTP/2.0 server backed by `io`.",32,[[["self"],[T]],[R[48]]]],[11,R[68],E,"Send a response to a client request.",33,[[["self"],[R[65]],["bool"]],[[R[8]],[R[2],[R[66],R[8]]],[R[66]]]]],[11,"push_request",E,"Push a request and response to the client",33,[[[R[42]],["self"]],[[R[2],[R[67],R[8]]],[R[67]],[R[8]]]]],[11,R[69],E,R[70],33,[[[R[5]],["self"]]]],[11,R[71],E,R[72],33,[[["self"],[R[4]]],[[R[2],[R[5],R[8]]],["poll",[R[2]]]]]],[11,R[20],E,R[51],33,[[["self"]],[R[19]]]],[11,R[68],E,"Send a response to a promised request.",34,[[["self"],[R[65]],["bool"]],[[R[8]],[R[2],[R[66],R[8]]],[R[66]]]]],[11,R[69],E,R[70],34,[[[R[5]],["self"]]]],[11,R[71],E,R[72],34,[[["self"],[R[4]]],[[R[2],[R[5],R[8]]],["poll",[R[2]]]]]],[11,R[20],E,R[51],34,[[["self"]],[R[19]]]],[11,"reserve_capacity","h2","Requests capacity to send data.",35,[[["self"],[R[1]]]]],[11,"capacity",E,"Returns the stream's current send capacity.",35,[[["self"]],[R[1]]]],[11,"poll_capacity",E,"Requests to be notified when the stream's capacity…",35,[[["self"],[R[4]]],[[R[6],[R[2]]],["poll",[R[6]]]]]],[11,"send_data",E,"Sends a single data frame to the remote peer.",35,[[["self"],["b"],["bool"]],[[R[8]],[R[2],[R[8]]]]]],[11,"send_trailers",E,"Sends trailers to the remote peer.",35,[[["self"],[R[21]]],[[R[8]],[R[2],[R[8]]]]]],[11,R[69],E,"Resets the stream.",35,[[[R[5]],["self"]]]],[11,R[71],E,R[72],35,[[["self"],[R[4]]],[[R[2],[R[5],R[8]]],["poll",[R[2]]]]]],[11,R[20],E,"Returns the stream ID of this `SendStream`.",35,[[["self"]],[R[19]]]],[11,"data",E,"Get the next data frame.",36,[[["self"]]]],[11,R[73],E,"Get optional trailers for this stream.",36,[[["self"]]]],[11,R[23],E,"Returns true if the receive half has reached the end of…",36,[[["self"]],["bool"]]],[11,"flow_control",E,"Get a mutable reference to this stream's `FlowControl`.",36,[[["self"]],[R[90]]]],[11,R[20],E,"Returns the stream ID of this stream.",36,[[["self"]],[R[19]]]],[11,R[20],E,"Returns the stream ID of the stream whose capacity will be…",37,[[["self"]],[R[19]]]],[11,"available_capacity",E,"Get the current available capacity of data this stream…",37,[[["self"]],["isize"]]],[11,"used_capacity",E,"Get the currently used capacity for this stream.",37,[[["self"]],[R[1]]]],[11,"release_capacity",E,"Release window capacity back to remote stream.",37,[[["self"],[R[1]]],[[R[8]],[R[2],[R[8]]]]]],[11,"ping",E,"Send a PING frame and wait for the peer to send the pong.",38,[[["ping"],["self"]]]],[11,"opaque",E,"Creates a new opaque `Ping` to be sent via a [`PingPong`][].",39,[[],["ping"]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[74],E,E,4,[[["self"]],[R[85]]]],[11,R[75],E,E,4,[[[U]],[R[2]]]],[11,R[76],E,E,4,[[],[R[2]]]],[11,R[81],E,E,4,[[["self"]],[T]]],[11,R[77],E,E,4,[[["self"]],[T]]],[11,R[80],E,E,4,[[["self"]],[R[82]]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[78],E,E,19,[[["self"]],[T]]],[11,R[79],E,E,19,[[["self"],[T]]]],[11,R[74],E,E,19,[[["self"]],[R[85]]]],[11,R[75],E,E,19,[[[U]],[R[2]]]],[11,R[76],E,E,19,[[],[R[2]]]],[11,R[81],E,E,19,[[["self"]],[T]]],[11,R[77],E,E,19,[[["self"]],[T]]],[11,R[80],E,E,19,[[["self"]],[R[82]]]],[11,R[83],E,E,19,[[["k"],["self"]],["bool"]]],[11,"into",E,E,37,[[],[U]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[78],E,E,37,[[["self"]],[T]]],[11,R[79],E,E,37,[[["self"],[T]]]],[11,R[75],E,E,37,[[[U]],[R[2]]]],[11,R[76],E,E,37,[[],[R[2]]]],[11,R[81],E,E,37,[[["self"]],[T]]],[11,R[77],E,E,37,[[["self"]],[T]]],[11,R[80],E,E,37,[[["self"]],[R[82]]]],[11,"into",E,E,39,[[],[U]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[75],E,E,39,[[[U]],[R[2]]]],[11,R[76],E,E,39,[[],[R[2]]]],[11,R[81],E,E,39,[[["self"]],[T]]],[11,R[77],E,E,39,[[["self"]],[T]]],[11,R[80],E,E,39,[[["self"]],[R[82]]]],[11,"into",E,E,38,[[],[U]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[75],E,E,38,[[[U]],[R[2]]]],[11,R[76],E,E,38,[[],[R[2]]]],[11,R[81],E,E,38,[[["self"]],[T]]],[11,R[77],E,E,38,[[["self"]],[T]]],[11,R[80],E,E,38,[[["self"]],[R[82]]]],[11,"into",E,E,40,[[],[U]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[75],E,E,40,[[[U]],[R[2]]]],[11,R[76],E,E,40,[[],[R[2]]]],[11,R[81],E,E,40,[[["self"]],[T]]],[11,R[77],E,E,40,[[["self"]],[T]]],[11,R[80],E,E,40,[[["self"]],[R[82]]]],[11,"into",E,E,36,[[],[U]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[75],E,E,36,[[[U]],[R[2]]]],[11,R[76],E,E,36,[[],[R[2]]]],[11,R[81],E,E,36,[[["self"]],[T]]],[11,R[77],E,E,36,[[["self"]],[T]]],[11,R[80],E,E,36,[[["self"]],[R[82]]]],[11,R[84],E,E,36,[[[R[4]],["s"],["pin"]],[[R[6],[R[2]]],["poll",[R[6]]]]]],[11,"into",E,E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[75],E,E,35,[[[U]],[R[2]]]],[11,R[76],E,E,35,[[],[R[2]]]],[11,R[81],E,E,35,[[["self"]],[T]]],[11,R[77],E,E,35,[[["self"]],[T]]],[11,R[80],E,E,35,[[["self"]],[R[82]]]],[11,"into",E,E,41,[[],[U]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[78],E,E,41,[[["self"]],[T]]],[11,R[79],E,E,41,[[["self"],[T]]]],[11,R[75],E,E,41,[[[U]],[R[2]]]],[11,R[76],E,E,41,[[],[R[2]]]],[11,R[81],E,E,41,[[["self"]],[T]]],[11,R[77],E,E,41,[[["self"]],[T]]],[11,R[80],E,E,41,[[["self"]],[R[82]]]],[11,R[83],E,E,41,[[["k"],["self"]],["bool"]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[75],E,E,3,[[[U]],[R[2]]]],[11,R[76],E,E,3,[[],[R[2]]]],[11,R[81],E,E,3,[[["self"]],[T]]],[11,R[77],E,E,3,[[["self"]],[T]]],[11,R[80],E,E,3,[[["self"]],[R[82]]]],[11,R[84],E,E,3,[[[R[4]],["s"],["pin"]],[[R[6],[R[2]]],["poll",[R[6]]]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[74],E,E,0,[[["self"]],[R[85]]]],[11,R[75],E,E,0,[[[U]],[R[2]]]],[11,R[76],E,E,0,[[],[R[2]]]],[11,R[81],E,E,0,[[["self"]],[T]]],[11,R[77],E,E,0,[[["self"]],[T]]],[11,R[80],E,E,0,[[["self"]],[R[82]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[74],E,E,1,[[["self"]],[R[85]]]],[11,R[75],E,E,1,[[[U]],[R[2]]]],[11,R[76],E,E,1,[[],[R[2]]]],[11,R[81],E,E,1,[[["self"]],[T]]],[11,R[77],E,E,1,[[["self"]],[T]]],[11,R[80],E,E,1,[[["self"]],[R[82]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[74],E,E,2,[[["self"]],[R[85]]]],[11,R[75],E,E,2,[[[U]],[R[2]]]],[11,R[76],E,E,2,[[],[R[2]]]],[11,R[81],E,E,2,[[["self"]],[T]]],[11,R[77],E,E,2,[[["self"]],[T]]],[11,R[80],E,E,2,[[["self"]],[R[82]]]],[11,"into",R[36],E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[75],E,E,10,[[[U]],[R[2]]]],[11,R[76],E,E,10,[[],[R[2]]]],[11,R[81],E,E,10,[[["self"]],[T]]],[11,R[77],E,E,10,[[["self"]],[T]]],[11,R[80],E,E,10,[[["self"]],[R[82]]]],[11,R[83],E,E,10,[[["k"],["self"]],["bool"]]],[11,"into",E,E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[78],E,E,11,[[["self"]],[T]]],[11,R[79],E,E,11,[[["self"],[T]]]],[11,R[75],E,E,11,[[[U]],[R[2]]]],[11,R[76],E,E,11,[[],[R[2]]]],[11,R[81],E,E,11,[[["self"]],[T]]],[11,R[77],E,E,11,[[["self"]],[T]]],[11,R[80],E,E,11,[[["self"]],[R[82]]]],[11,R[83],E,E,11,[[["k"],["self"]],["bool"]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[78],E,E,12,[[["self"]],[T]]],[11,R[79],E,E,12,[[["self"],[T]]]],[11,R[75],E,E,12,[[[U]],[R[2]]]],[11,R[76],E,E,12,[[],[R[2]]]],[11,R[81],E,E,12,[[["self"]],[T]]],[11,R[77],E,E,12,[[["self"]],[T]]],[11,R[80],E,E,12,[[["self"]],[R[82]]]],[11,R[83],E,E,12,[[["k"],["self"]],["bool"]]],[11,"into",E,E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[75],E,E,15,[[[U]],[R[2]]]],[11,R[76],E,E,15,[[],[R[2]]]],[11,R[81],E,E,15,[[["self"]],[T]]],[11,R[77],E,E,15,[[["self"]],[T]]],[11,R[80],E,E,15,[[["self"]],[R[82]]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[75],E,E,13,[[[U]],[R[2]]]],[11,R[76],E,E,13,[[],[R[2]]]],[11,R[81],E,E,13,[[["self"]],[T]]],[11,R[77],E,E,13,[[["self"]],[T]]],[11,R[80],E,E,13,[[["self"]],[R[82]]]],[11,R[83],E,E,13,[[["k"],["self"]],["bool"]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[75],E,E,5,[[[U]],[R[2]]]],[11,R[76],E,E,5,[[],[R[2]]]],[11,R[81],E,E,5,[[["self"]],[T]]],[11,R[77],E,E,5,[[["self"]],[T]]],[11,R[80],E,E,5,[[["self"]],[R[82]]]],[11,R[83],E,E,5,[[["k"],["self"]],["bool"]]],[11,"into",E,E,14,[[],[U]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[75],E,E,14,[[[U]],[R[2]]]],[11,R[76],E,E,14,[[],[R[2]]]],[11,R[81],E,E,14,[[["self"]],[T]]],[11,R[77],E,E,14,[[["self"]],[T]]],[11,R[80],E,E,14,[[["self"]],[R[82]]]],[11,R[83],E,E,14,[[["k"],["self"]],["bool"]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[75],E,E,16,[[[U]],[R[2]]]],[11,R[76],E,E,16,[[],[R[2]]]],[11,R[81],E,E,16,[[["self"]],[T]]],[11,R[77],E,E,16,[[["self"]],[T]]],[11,R[80],E,E,16,[[["self"]],[R[82]]]],[11,R[83],E,E,16,[[["k"],["self"]],["bool"]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[75],E,E,17,[[[U]],[R[2]]]],[11,R[76],E,E,17,[[],[R[2]]]],[11,R[81],E,E,17,[[["self"]],[T]]],[11,R[77],E,E,17,[[["self"]],[T]]],[11,R[80],E,E,17,[[["self"]],[R[82]]]],[11,R[83],E,E,17,[[["k"],["self"]],["bool"]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[75],E,E,18,[[[U]],[R[2]]]],[11,R[76],E,E,18,[[],[R[2]]]],[11,R[81],E,E,18,[[["self"]],[T]]],[11,R[77],E,E,18,[[["self"]],[T]]],[11,R[80],E,E,18,[[["self"]],[R[82]]]],[11,R[83],E,E,18,[[["k"],["self"]],["bool"]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[75],E,E,20,[[[U]],[R[2]]]],[11,R[76],E,E,20,[[],[R[2]]]],[11,R[81],E,E,20,[[["self"]],[T]]],[11,R[77],E,E,20,[[["self"]],[T]]],[11,R[80],E,E,20,[[["self"]],[R[82]]]],[11,R[83],E,E,20,[[["k"],["self"]],["bool"]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[78],E,E,21,[[["self"]],[T]]],[11,R[79],E,E,21,[[["self"],[T]]]],[11,R[75],E,E,21,[[[U]],[R[2]]]],[11,R[76],E,E,21,[[],[R[2]]]],[11,R[81],E,E,21,[[["self"]],[T]]],[11,R[77],E,E,21,[[["self"]],[T]]],[11,R[80],E,E,21,[[["self"]],[R[82]]]],[11,R[83],E,E,21,[[["k"],["self"]],["bool"]]],[11,"into",E,E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[78],E,E,22,[[["self"]],[T]]],[11,R[79],E,E,22,[[["self"],[T]]]],[11,R[75],E,E,22,[[[U]],[R[2]]]],[11,R[76],E,E,22,[[],[R[2]]]],[11,R[81],E,E,22,[[["self"]],[T]]],[11,R[77],E,E,22,[[["self"]],[T]]],[11,R[80],E,E,22,[[["self"]],[R[82]]]],[11,R[83],E,E,22,[[["k"],["self"]],["bool"]]],[11,"into",E,E,42,[[],[U]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[78],E,E,42,[[["self"]],[T]]],[11,R[79],E,E,42,[[["self"],[T]]]],[11,R[75],E,E,42,[[[U]],[R[2]]]],[11,R[76],E,E,42,[[],[R[2]]]],[11,R[81],E,E,42,[[["self"]],[T]]],[11,R[77],E,E,42,[[["self"]],[T]]],[11,R[80],E,E,42,[[["self"]],[R[82]]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[78],E,E,23,[[["self"]],[T]]],[11,R[79],E,E,23,[[["self"],[T]]]],[11,R[75],E,E,23,[[[U]],[R[2]]]],[11,R[76],E,E,23,[[],[R[2]]]],[11,R[81],E,E,23,[[["self"]],[T]]],[11,R[77],E,E,23,[[["self"]],[T]]],[11,R[80],E,E,23,[[["self"]],[R[82]]]],[11,R[83],E,E,23,[[["k"],["self"]],["bool"]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[78],E,E,6,[[["self"]],[T]]],[11,R[79],E,E,6,[[["self"],[T]]]],[11,R[75],E,E,6,[[[U]],[R[2]]]],[11,R[76],E,E,6,[[],[R[2]]]],[11,R[81],E,E,6,[[["self"]],[T]]],[11,R[77],E,E,6,[[["self"]],[T]]],[11,R[80],E,E,6,[[["self"]],[R[82]]]],[11,R[83],E,E,6,[[["k"],["self"]],["bool"]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[75],E,E,7,[[[U]],[R[2]]]],[11,R[76],E,E,7,[[],[R[2]]]],[11,R[81],E,E,7,[[["self"]],[T]]],[11,R[77],E,E,7,[[["self"]],[T]]],[11,R[80],E,E,7,[[["self"]],[R[82]]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[75],E,E,8,[[[U]],[R[2]]]],[11,R[76],E,E,8,[[],[R[2]]]],[11,R[81],E,E,8,[[["self"]],[T]]],[11,R[77],E,E,8,[[["self"]],[T]]],[11,R[80],E,E,8,[[["self"]],[R[82]]]],[11,R[83],E,E,8,[[["k"],["self"]],["bool"]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[78],E,E,9,[[["self"]],[T]]],[11,R[79],E,E,9,[[["self"],[T]]]],[11,R[75],E,E,9,[[[U]],[R[2]]]],[11,R[76],E,E,9,[[],[R[2]]]],[11,R[81],E,E,9,[[["self"]],[T]]],[11,R[77],E,E,9,[[["self"]],[T]]],[11,R[80],E,E,9,[[["self"]],[R[82]]]],[11,R[83],E,E,9,[[["k"],["self"]],["bool"]]],[11,"into",R[86],E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[78],E,E,24,[[["self"]],[T]]],[11,R[79],E,E,24,[[["self"],[T]]]],[11,R[75],E,E,24,[[[U]],[R[2]]]],[11,R[76],E,E,24,[[],[R[2]]]],[11,R[81],E,E,24,[[["self"]],[T]]],[11,R[77],E,E,24,[[["self"]],[T]]],[11,R[80],E,E,24,[[["self"]],[R[82]]]],[11,"into",E,E,43,[[],[U]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[75],E,E,43,[[[U]],[R[2]]]],[11,R[76],E,E,43,[[],[R[2]]]],[11,R[81],E,E,43,[[["self"]],[T]]],[11,R[77],E,E,43,[[["self"]],[T]]],[11,R[80],E,E,43,[[["self"]],[R[82]]]],[11,R[87],E,E,43,[[["pin"],["f"],[R[4]]],["poll"]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[75],E,E,26,[[[U]],[R[2]]]],[11,R[76],E,E,26,[[],[R[2]]]],[11,R[81],E,E,26,[[["self"]],[T]]],[11,R[77],E,E,26,[[["self"]],[T]]],[11,R[80],E,E,26,[[["self"]],[R[82]]]],[11,R[87],E,E,26,[[["pin"],["f"],[R[4]]],["poll"]]],[11,"into",E,E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[75],E,E,27,[[[U]],[R[2]]]],[11,R[76],E,E,27,[[],[R[2]]]],[11,R[81],E,E,27,[[["self"]],[T]]],[11,R[77],E,E,27,[[["self"]],[T]]],[11,R[80],E,E,27,[[["self"]],[R[82]]]],[11,R[87],E,E,27,[[["pin"],["f"],[R[4]]],["poll"]]],[11,"into",E,E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[75],E,E,30,[[[U]],[R[2]]]],[11,R[76],E,E,30,[[],[R[2]]]],[11,R[81],E,E,30,[[["self"]],[T]]],[11,R[77],E,E,30,[[["self"]],[T]]],[11,R[80],E,E,30,[[["self"]],[R[82]]]],[11,R[87],E,E,30,[[["pin"],["f"],[R[4]]],["poll"]]],[11,"into",E,E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[75],E,E,29,[[[U]],[R[2]]]],[11,R[76],E,E,29,[[],[R[2]]]],[11,R[81],E,E,29,[[["self"]],[T]]],[11,R[77],E,E,29,[[["self"]],[T]]],[11,R[80],E,E,29,[[["self"]],[R[82]]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[75],E,E,28,[[[U]],[R[2]]]],[11,R[76],E,E,28,[[],[R[2]]]],[11,R[81],E,E,28,[[["self"]],[T]]],[11,R[77],E,E,28,[[["self"]],[T]]],[11,R[80],E,E,28,[[["self"]],[R[82]]]],[11,R[84],E,E,28,[[[R[4]],["s"],["pin"]],[[R[6],[R[2]]],["poll",[R[6]]]]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[78],E,E,25,[[["self"]],[T]]],[11,R[79],E,E,25,[[["self"],[T]]]],[11,R[75],E,E,25,[[[U]],[R[2]]]],[11,R[76],E,E,25,[[],[R[2]]]],[11,R[81],E,E,25,[[["self"]],[T]]],[11,R[77],E,E,25,[[["self"]],[T]]],[11,R[80],E,E,25,[[["self"]],[R[82]]]],[11,"into",R[88],E,44,[[],[U]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[75],E,E,44,[[[U]],[R[2]]]],[11,R[76],E,E,44,[[],[R[2]]]],[11,R[81],E,E,44,[[["self"]],[T]]],[11,R[77],E,E,44,[[["self"]],[T]]],[11,R[80],E,E,44,[[["self"]],[R[82]]]],[11,R[87],E,E,44,[[["pin"],["f"],[R[4]]],["poll"]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[75],E,E,31,[[[U]],[R[2]]]],[11,R[76],E,E,31,[[],[R[2]]]],[11,R[81],E,E,31,[[["self"]],[T]]],[11,R[77],E,E,31,[[["self"]],[T]]],[11,R[80],E,E,31,[[["self"]],[R[82]]]],[11,R[84],E,E,31,[[[R[4]],["s"],["pin"]],[[R[6],[R[2]]],["poll",[R[6]]]]]],[11,"into",E,E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[78],E,E,32,[[["self"]],[T]]],[11,R[79],E,E,32,[[["self"],[T]]]],[11,R[75],E,E,32,[[[U]],[R[2]]]],[11,R[76],E,E,32,[[],[R[2]]]],[11,R[81],E,E,32,[[["self"]],[T]]],[11,R[77],E,E,32,[[["self"]],[T]]],[11,R[80],E,E,32,[[["self"]],[R[82]]]],[11,"into",E,E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[75],E,E,33,[[[U]],[R[2]]]],[11,R[76],E,E,33,[[],[R[2]]]],[11,R[81],E,E,33,[[["self"]],[T]]],[11,R[77],E,E,33,[[["self"]],[T]]],[11,R[80],E,E,33,[[["self"]],[R[82]]]],[11,"into",E,E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[75],E,E,34,[[[U]],[R[2]]]],[11,R[76],E,E,34,[[],[R[2]]]],[11,R[81],E,E,34,[[["self"]],[T]]],[11,R[77],E,E,34,[[["self"]],[T]]],[11,R[80],E,E,34,[[["self"]],[R[82]]]],[11,"drop","h2",E,36,[[["self"]]]],[11,"from",E,E,0,[[[R[8]]],["self"]]],[11,"from",E,E,1,[[[R[8]]],["self"]]],[11,"from",E,E,1,[[[R[3]]],["self"]]],[11,"from",E,E,3,[[[T]],["self"]]],[11,"from",E,E,4,[[[R[5]]],[R[8]]]],[11,"from",E,E,4,[[["senderror"]],[R[8]]]],[11,"from",E,E,4,[[[R[3]]],[R[8]]]],[11,"from",R[36],E,8,[[["data"]],["self"]]],[11,"from",E,E,8,[[[R[92]]],["self"]]],[11,"from",E,E,8,[[[R[93]]],["self"]]],[11,"from",E,E,8,[[[R[94]]],["self"]]],[11,"from",E,E,8,[[["ping"]],["frame"]]],[11,"from",E,E,8,[[[R[96]]],["self"]]],[11,"from","h2",E,19,[[["u32"]],[R[5]]]],[11,"from",R[36],E,8,[[["reset"]],["self"]]],[11,"from",E,E,8,[[[R[37]]],["frame"]]],[11,"from",E,E,22,[[["u32"]],["self"]]],[11,"from",E,E,8,[[[R[40]]],["self"]]],[11,"clone",E,E,11,[[["self"]],[R[92]]]],[11,"clone",E,E,12,[[["self"]],["head"]]],[11,"clone",E,E,6,[[["self"]],["kind"]]],[11,"clone","h2",E,19,[[["self"]],[R[5]]]],[11,"clone",R[36],E,21,[[["self"]],[R[37]]]],[11,"clone",E,E,22,[[["self"]],[R[19]]]],[11,"clone",E,E,42,[[["self"]],[R[39]]]],[11,"clone",E,E,23,[[["self"]],[R[40]]]],[11,"clone",E,E,9,[[["self"]],[R[8]]]],[11,"clone",R[86],E,25,[[["self"]],[R[89]]]],[11,"clone",E,E,24,[[["self"]],["self"]]],[11,"clone",R[88],E,32,[[["self"]],[R[89]]]],[11,"clone","h2",E,41,[[["self"]],[R[19]]]],[11,"clone",E,E,37,[[["self"]],[R[90]]]],[11,R[91],R[36],E,5,[[],[R[95]]]],[11,R[91],E,E,21,[[],[R[37]]]],[11,R[91],R[86],E,25,[[],[R[89]]]],[11,R[91],R[88],E,32,[[],[R[89]]]],[11,"cmp",R[36],E,22,[[[R[19]],["self"]],[R[98]]]],[11,"eq",E,E,10,[[["self"],["data"]],["bool"]]],[11,"ne",E,E,10,[[["self"],["data"]],["bool"]]],[11,"eq",E,E,11,[[[R[92]],["self"]],["bool"]]],[11,"ne",E,E,11,[[[R[92]],["self"]],["bool"]]],[11,"eq",E,E,12,[[["self"],["head"]],["bool"]]],[11,"ne",E,E,12,[[["self"],["head"]],["bool"]]],[11,"eq",E,E,6,[[["self"],["kind"]],["bool"]]],[11,"eq",E,E,13,[[[R[93]],["self"]],["bool"]]],[11,"ne",E,E,13,[[[R[93]],["self"]],["bool"]]],[11,"eq",E,E,14,[[["self"],[R[94]]],["bool"]]],[11,"ne",E,E,14,[[["self"],[R[94]]],["bool"]]],[11,"eq",E,E,5,[[[R[95]],["self"]],["bool"]]],[11,"ne",E,E,5,[[[R[95]],["self"]],["bool"]]],[11,"eq",E,E,16,[[["ping"],["self"]],["bool"]]],[11,"ne",E,E,16,[[["ping"],["self"]],["bool"]]],[11,"eq",E,E,17,[[["self"],[R[96]]],["bool"]]],[11,"ne",E,E,17,[[["self"],[R[96]]],["bool"]]],[11,"eq",E,E,18,[[["self"],[R[97]]],["bool"]]],[11,"ne",E,E,18,[[["self"],[R[97]]],["bool"]]],[11,"eq","h2",E,19,[[[R[5]],["self"]],["bool"]]],[11,"ne",E,E,19,[[[R[5]],["self"]],["bool"]]],[11,"eq",R[36],E,20,[[["self"],["reset"]],["bool"]]],[11,"ne",E,E,20,[[["self"],["reset"]],["bool"]]],[11,"eq",E,E,21,[[[R[37]],["self"]],["bool"]]],[11,"ne",E,E,21,[[[R[37]],["self"]],["bool"]]],[11,"eq",E,E,22,[[[R[19]],["self"]],["bool"]]],[11,"ne",E,E,22,[[[R[19]],["self"]],["bool"]]],[11,"eq",E,E,22,[[["u32"],["self"]],["bool"]]],[11,"eq",E,E,23,[[["self"],[R[40]]],["bool"]]],[11,"ne",E,E,23,[[["self"],[R[40]]],["bool"]]],[11,"eq",E,E,8,[[["frame"],["self"]],["bool"]]],[11,"ne",E,E,8,[[["frame"],["self"]],["bool"]]],[11,"eq",E,E,9,[[[R[8]],["self"]],["bool"]]],[11,"ne",E,E,9,[[[R[8]],["self"]],["bool"]]],[11,"eq","h2",E,41,[[[R[19]],["self"]],["bool"]]],[11,"ne",E,E,41,[[[R[19]],["self"]],["bool"]]],[11,"partial_cmp",R[36],E,22,[[[R[19]],["self"]],[[R[6],[R[98]]],[R[98]]]]],[11,"lt",E,E,22,[[[R[19]],["self"]],["bool"]]],[11,"le",E,E,22,[[[R[19]],["self"]],["bool"]]],[11,"gt",E,E,22,[[[R[19]],["self"]],["bool"]]],[11,"ge",E,E,22,[[[R[19]],["self"]],["bool"]]],[11,"fmt","h2",E,0,[[["self"],[R[99]]],[R[2]]]],[11,"fmt",E,E,1,[[["self"],[R[99]]],[R[2]]]],[11,"fmt",E,E,2,[[["self"],[R[99]]],[R[2]]]],[11,"fmt",E,E,4,[[["self"],[R[99]]],[R[2]]]],[11,"fmt",E,E,19,[[["self"],[R[99]]],[R[2]]]],[11,"fmt",E,E,0,[[["self"],[R[99]]],[R[2]]]],[11,"fmt",E,E,1,[[["self"],[R[99]]],[R[2]]]],[11,"fmt",E,E,2,[[["self"],[R[99]]],[R[2]]]],[11,"fmt",E,E,3,[[["self"],[R[99]]],[R[2]]]],[11,"fmt",E,E,4,[[["self"],[R[99]]],[R[2]]]],[11,"fmt",R[36],E,10,[[["self"],[R[99]]],[R[2]]]],[11,"fmt",E,E,11,[[["self"],[R[99]]],[R[2]]]],[11,"fmt",E,E,12,[[["self"],[R[99]]],[R[2]]]],[11,"fmt",E,E,6,[[["self"],[R[99]]],[R[2]]]],[11,"fmt",E,E,15,[[["self"],[R[99]]],[R[2]]]],[11,"fmt",E,E,5,[[["self"],[R[99]]],[R[2]]]],[11,"fmt",E,E,13,[[["self"],[R[99]]],[R[2]]]],[11,"fmt",E,E,7,[[["self"],[R[99]]],[R[2]]]],[11,"fmt",E,E,14,[[["self"],[R[99]]],[R[2]]]],[11,"fmt",E,E,16,[[["self"],[R[99]]],[R[2]]]],[11,"fmt",E,E,17,[[["self"],[R[99]]],[R[2]]]],[11,"fmt",E,E,18,[[["self"],[R[99]]],[R[2]]]],[11,"fmt","h2",E,19,[[["self"],[R[99]]],[R[2]]]],[11,"fmt",R[36],E,20,[[["self"],[R[99]]],[R[2]]]],[11,"fmt",E,E,21,[[["self"],[R[99]]],[R[2]]]],[11,"fmt",E,E,22,[[["self"],[R[99]]],[R[2]]]],[11,"fmt",E,E,42,[[["self"],[R[99]]],[R[2]]]],[11,"fmt",E,E,23,[[["self"],[R[99]]],[R[2]]]],[11,"fmt",E,E,8,[[["self"],[R[99]]],[R[2]]]],[11,"fmt",E,E,9,[[["self"],[R[99]]],[R[2]]]],[11,"fmt",R[86],E,43,[[["self"],[R[99]]],[R[2]]]],[11,"fmt",E,E,27,[[["self"],[R[99]]],[R[2]]]],[11,"fmt",E,E,30,[[["self"],[R[99]]],[R[2]]]],[11,"fmt",E,E,29,[[["self"],[R[99]]],[R[2]]]],[11,"fmt",E,E,28,[[["self"],[R[99]]],[R[2]]]],[11,"fmt",E,E,25,[[["self"],[R[99]]],[R[2]]]],[11,"fmt",E,E,24,[[["self"],[R[99]]],[R[2]]]],[11,"fmt",E,E,26,[[["self"],[R[99]]],[R[2]]]],[11,"fmt",R[88],E,32,[[["self"],[R[99]]],[R[2]]]],[11,"fmt",E,E,33,[[["self"],[R[99]]],[R[2]]]],[11,"fmt",E,E,34,[[["self"],[R[99]]],[R[2]]]],[11,"fmt",E,E,31,[[["self"],[R[99]]],[R[2]]]],[11,"fmt",E,E,44,[[["self"],[R[99]]],[R[2]]]],[11,"fmt","h2",E,35,[[["self"],[R[99]]],[R[2]]]],[11,"fmt",E,E,41,[[["self"],[R[99]]],[R[2]]]],[11,"fmt",E,E,37,[[["self"],[R[99]]],[R[2]]]],[11,"fmt",E,E,36,[[["self"],[R[99]]],[R[2]]]],[11,"fmt",E,E,38,[[["self"],[R[99]]],[R[2]]]],[11,"fmt",E,E,39,[[["self"],[R[99]]],[R[2]]]],[11,"fmt",E,E,40,[[["self"],[R[99]]],[R[2]]]],[11,"hash",R[36],E,22,[[["self"],["__h"]]]],[11,"hash","h2",E,41,[[["self"],["__h"]]]],[11,R[100],E,E,0,[[["self"]],["str"]]],[11,R[100],E,E,1,[[["self"]],["str"]]],[11,R[100],E,E,2,[[["self"]],["str"]]],[11,R[100],E,E,4,[[["self"]],["str"]]],[11,"poll",R[86],E,43,[[[R[4]],["self"],["pin"]],["poll"]]],[11,"poll",E,E,26,[[[R[4]],["self"],["pin"]],["poll"]]],[11,"poll",E,E,27,[[[R[4]],["self"],["pin"]],["poll"]]],[11,"poll",E,E,30,[[[R[4]],["self"],["pin"]],["poll"]]],[11,"poll",R[88],E,44,[[[R[4]],["self"],["pin"]],["poll"]]],[11,R[101],"h2",E,3,[[[R[4]],["self"],["pin"]],[["poll",[R[6]]],[R[6]]]]],[11,R[101],R[86],E,28,[[[R[4]],["self"],["pin"]],[["poll",[R[6]]],[R[6]]]]],[11,R[101],R[88],E,31,[[[R[4]],["self"],["pin"]],[["poll",[R[6]]],[R[6]]]]],[11,R[101],"h2",E,36,[[[R[4]],["self"],["pin"]],[["poll",[R[6]]],[R[6]]]]],[11,"start_send",E,E,3,[[["frame"],["self"],["pin"]],[R[2]]]],[11,R[41],E,R[102],3,[[[R[4]],["self"],["pin"]],[[R[2]],["poll",[R[2]]]]]],[11,"poll_flush",E,R[103],3,[[[R[4]],["self"],["pin"]],[[R[2]],["poll",[R[2]]]]]],[11,"poll_close",E,E,3,[[[R[4]],["self"],["pin"]],[[R[2]],["poll",[R[2]]]]]]],"p":[[4,R[104]],[4,R[105]],[4,R[106]],[3,"Codec"],[3,"Error"],[3,"Pseudo"],[4,"Kind"],[4,R[107]],[4,"Frame"],[4,"Error"],[3,"Data"],[3,"GoAway"],[3,"Head"],[3,R[18]],[3,R[15]],[3,R[17]],[3,"Ping"],[3,R[13]],[3,R[108]],[3,R[9]],[3,"Reset"],[3,R[14]],[3,R[11]],[3,R[16]],[3,R[109]],[3,"Builder"],[3,R[0]],[3,R[110]],[3,R[111]],[3,R[15]],[3,R[112]],[3,R[0]],[3,"Builder"],[3,R[113]],[3,R[114]],[3,R[115]],[3,R[116]],[3,R[117]],[3,"PingPong"],[3,"Ping"],[3,"Pong"],[3,R[11]],[3,R[118]],[3,R[119]],[3,R[120]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);